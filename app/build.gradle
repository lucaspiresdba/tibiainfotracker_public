plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id("de.mannodermaus.android-junit5")
    id("kotlin-kapt")
    id("androidx.navigation.safeargs.kotlin")
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "br.com.lucaspires.tibiainfotracker"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 3
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    ext {
        retrofit = "2.6.4"
        okhttp_loggin = "3.12.1"
        rx_java = "2.2.19"
        rx_android = "2.1.1"
        koin = "3.0.1-beta-1"
        navigation_comp = "2.3.5"
        lottie = "3.4.0"
        room = "2.2.6"
        glide = "4.12.0"
        radio_group = "0.0.8"
        firebase = "26.6.0"
        jupiter = "5.7.1"
        androix_testing = "2.1.0"
        sthetho = "1.6.0"
        mockk = "1.11.0"
        mockito_core = "3.3.3"
        junit = "4.13.2"
    }

    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    implementation "androidx.fragment:fragment-ktx:1.3.3"

    //Retrofit
    implementation "com.squareup.retrofit2:adapter-rxjava2:$ext.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$ext.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$ext.okhttp_loggin"
    implementation("com.squareup.retrofit2:retrofit:$ext.retrofit") {
        exclude module: 'okhttp'
    }

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:$ext.rx_java"
    implementation "io.reactivex.rxjava2:rxandroid:$ext.rx_android"

    //Koin
    implementation "io.insert-koin:koin-android:$ext.koin"
    implementation "io.insert-koin:koin-android-ext:$ext.koin"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$ext.navigation_comp"
    implementation "androidx.navigation:navigation-ui-ktx:$ext.navigation_comp"

    //Lottie
    implementation "com.airbnb.android:lottie:$ext.lottie"

    //Glide
    implementation "com.github.bumptech.glide:glide:$ext.glide"
    kapt "com.github.bumptech.glide:compiler:$ext.glide"

    //Room
    implementation "androidx.room:room-runtime:$ext.room"
    kapt "androidx.room:room-compiler:$ext.room"
    testImplementation "androidx.room:room-testing:$ext.room"
    implementation "androidx.room:room-rxjava2:$ext.room"

    //CustomRadioGroup
    implementation "com.github.jeffreyliu8:FlexBoxRadioGroup:$ext.radio_group"

    //Firebase
    implementation platform("com.google.firebase:firebase-bom:$ext.firebase")
    implementation "com.google.firebase:firebase-database-ktx"
    implementation 'com.google.firebase:firebase-analytics'

    //Sthetho
    implementation "com.facebook.stetho:stetho:$ext.sthetho"

    //Testing
    testImplementation "io.mockk:mockk:$ext.mockk"
    testImplementation "junit:junit:$ext.junit"
    testImplementation "org.mockito:mockito-core:$ext.mockito_core"
    testImplementation("org.junit.jupiter:junit-jupiter-api:$ext.jupiter")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$ext.jupiter")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "androidx.arch.core:core-testing:$androix_testing"


}